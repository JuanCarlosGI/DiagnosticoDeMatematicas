@using DiagnosticoDeMatematicas.Charts
@using DiagnosticoDeMatematicas.Models
@model List<Question>

<h1>Probar combinaciones</h1>
<p>@Html.ActionLink("Regresar a examen", "Details", "Exams", new { id = Model.First().ExamId }, new {})</p>

<h3>Original</h3>
<div class="panel panel-primary">
    <div class="panel-body">
        @{
            var first = ViewBag.Notation as SelectionQuestion;
        }
        @if (first != null)
        {
            @first.Description
            var options = first.Options;

            for (int row = 0; row < options.Count; row++)
            {
                <div class="row">
                    @foreach (var option in options.Skip(row * 2).Take(2))
                    {
                        <div class="col-xs-6">
                            @option.Description
                            <br /><br />
                        </div>
                    }
                </div>
            }
        }
    </div>
</div>

<h3>Combinaciones</h3>
@foreach (var question in Model)
{
    <div class="panel panel-primary">
        <div class="panel-body">
            @{
                var selectionQuestion = question as SelectionQuestion;
            }
            @if (selectionQuestion != null)
            {
                @Html.Raw(ChartBuilder.QuestionWithChart(selectionQuestion.Description))
                var options = selectionQuestion.Options;

                for (int row = 0; row < options.Count; row++)
                {
                    <div class="row">
                        @foreach (var option in options.Skip(row * 2).Take(2))
                        {
                            <div class="col-xs-6">
                                @Html.Raw(ChartBuilder.QuestionWithChart(option.Description))
                                <br /><br />
                            </div>
                        }
                    </div>
                }
            }
        </div>
    </div>
}